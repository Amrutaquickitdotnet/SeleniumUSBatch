package com.selenium;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;



public class Example007_Sorting {

	static WebDriver driver;// Declared Webdriver as Global variable

	public static void main(String[] args) {
		launchbrowser();
		sorting();

	}

	public static void launchbrowser() {
		driver = new ChromeDriver();
		driver.get("http://20.127.21.109/#/home/device");
		driver.manage().window().maximize();
		driver.findElement(By.xpath("//input[@formcontrolname='username']")).sendKeys("devendar.malothu@birlasoft.com");
		driver.findElement(By.xpath("//input[@formcontrolname='password']")).sendKeys("AutoTest@123");
		
		driver.findElement(By.xpath("//button[@class='addButton']")).click();
		
		
		
		
	}

	public static void sorting() {

		
	
		 WebElement device =driver.findElement(By.xpath("/html/body/app-root/app-root/app-home/mat-sidenav-container/mat-sidenav/div/mat-nav-list/ul/li[3]/a/span"));
			
		 Actions act= new Actions(driver);
			act.moveToElement(null)
			
		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	List<WebElement> edgeIDs =	driver.findElements(By.xpath("//table[@id='matTable']/tbody/tr/td[1]"));
	
	String[] before_sortId =  new String[edgeIDs.size()];
	
	for(int i=0; i<edgeIDs.size(); i++) {
		edgeIDs.get(i).getText().trim();
	}
	System.out.println("*********brfore Sort function********");
	print(before_sortId);
	
	Arrays.sort(before_sortId);
	
	WebElement sortButton =driver.findElement(By.xpath("//thead/tr[1]/th[1]/div[1]/span[1]/div[1]/div[2]/div[2]/div[2]"));
	sortButton.click();
	
	edgeIDs = driver.findElements(By.xpath("//table[@id='matTable']/tbody/tr/td[1]"));
	String[] after_sortId =  new String[edgeIDs.size()];
	
	for(int i=0; i<edgeIDs.size(); i++) {
		after_sortId[i] = edgeIDs.get(i).getText().trim();
		
	}
	

	Assert.assertEquals("Assertion", after_sortId, before_sortId);
	
	
	System.out.println("After the sort");
	print(after_sortId);
	
	
	
	}
		public static  void print(String[]ar) {
			for(int i=0; i<ar.length; i++) {
				System.out.println(ar[i]);
			}
			
		}
	}

